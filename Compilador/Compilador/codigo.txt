ee{
    i8 d , q , i , c,t,n;
    i8 num;
    num=:0; d=:0; q=:0; i=:0; c=:0; t=:0; n=:0;
    f32 f;
    fun bb(i8 num): f32{
        num=:120+120;

        out('Impresion desde /
funcion bb');
        return(-3.0);
    }

    fun aa(i8 num): f32{
        const u=: 100;
        out('Impresion desde /
funcion aa');
        fun cc(f32 x): i8{
            <<f=:aa(0);
            return(45);
        }
        i8 m;
        f32 g;
        m=:cc(g);
        f32 r;
        if(num/3/1< m/i/1) then{
            n=: 120+120;
            return(r);
        }
        else
            m=: i;
        end_if
        return(tof32(2+1));
    }
    const a=:-1, b=:-2;
    when(a-1=b)then{
        c=:t;
    }
    if (i<c)then
        d=:q;
    end_if
    i=:for(i=:n; i <t+1 ;-3){
        bbb:for(i=:n; i <t+1 ;-3){
            break;
            aaa:for(i=:n; i <t+1 ;-3){
                break;
                if(i<3)then
                    continue:bbb;
                end_if
                break -2;
                d=:d;
            }

            <<else 1;
        }
        if(t < 3) then{
            i=: 1;
            break 5;
        }
        else{
            if(t>2)then
                i=:-5;
            end_if
            break;
            }
        end_if

    }
    else 1;
    f32 w;
    w=:tof32(q/5+1);
    w=:aa(0);

}